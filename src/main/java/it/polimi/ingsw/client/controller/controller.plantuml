@startuml

title __CONTROLLER's Class Diagram__\n

  namespace  {
    namespace t.polimi.ingsw.client {
      namespace controller {
        class it.polimi.ingsw.client.controller.ClientBoardUpdater {
            + ClientBoardUpdater()
            ~ boardUpdate()
        }
      }
    }
  }
  

  namespace  {
    namespace t.polimi.ingsw.client {
      namespace controller {
        class it.polimi.ingsw.client.controller.ClientManager {
            {static} + LOGGER : Logger
            - canBuildAgain : boolean
            - canMoveAgain : boolean
            {static} - clientView : ClientView
            - myTurn : boolean
            - playerHasBuilt : boolean
            - playerHasMoved : boolean
            - powerUsed : boolean
            - workerPlaced : int
            - workerSelected : Integer
            + ClientManager()
            + boardUpdate()
            {static} + getClientView()
            + handleMessageFromServer()
            + handleServerRequest()
            + handleServerResponse()
            + login()
            + takeMessage()
            + updatePlayerInfo()
            - askUsername()
            - build()
            - chooseGodFromDeck()
            - chooseNumPlayers()
            - endTurn()
            - getPossibleActionBeforeBuilding()
            - getPossibleActionBeforeMoving()
            - handleBuildServerRequest()
            - handleBuildServerResponse()
            - handleChooseGodsServerResponse()
            - handleEndBuildServerResponse()
            - handleEndMoveServerResponse()
            - handleMoveWorkerServerRequest()
            - handleMoveWorkerServerResponse()
            - handlePickGodServerResponse()
            - handlePlaceWorkerServerResponse()
            - handlePlayerDisconnected()
            - handlePowerButtonServerResponse()
            - handleSelectWorkerServerResponse()
            - initLogger()
            - initMessageReceiver()
            - messageForMe()
            - moveWorker()
            - pickGod()
            - placeWorker()
            - playerLost()
            - playerWon()
            - removePlayerFromMatch()
            - selectWorker()
            - sendEndBuildRequest()
            - sendEndMoveRequest()
            {static} - setClientView()
            - someoneHasLost()
            - startTurn()
            - updateMyInfo()
            - usePowerButton()
            - whatToDo()
        }
      }
    }
  }
  

  namespace  {
    namespace t.polimi.ingsw.client {
      namespace controller {
        interface it.polimi.ingsw.client.controller.CommandInterface {
            {abstract} + execute()
        }
      }
    }
  }
  

  namespace  {
    namespace t.polimi.ingsw.client {
      namespace controller {
        class it.polimi.ingsw.client.controller.MessageReceiver {
            - thread : Thread
            + run()
            + start()
            ~ MessageReceiver()
        }
      }
    }
  }
  

  namespace  {
    namespace t.polimi.ingsw.client {
      namespace controller {
        class it.polimi.ingsw.client.controller.OpponentTurnManager {
            ~ turnOwner : String
            + serverRequestNotForYou()
            + serverResponseNotForYou()
        }
      }
    }
  }
  

  namespace  {
    namespace t.polimi.ingsw.client {
      namespace controller {
        enum PossibleClientAction {
          BUILD
          MOVE
          POWER_BUTTON
          SELECT_WORKER
        }
      }
    }
  }
  

  namespace  {
    namespace t.polimi.ingsw.client {
      namespace controller {
        enum PossibleClientState {
          ACTIVATING_POWER
          BUILDING
          CHOOSING_GODS
          ENDING_TURN
          GODS_CHOSEN
          GOD_ASSIGNED
          LOGIN
          LOGIN_DONE
          MOVING_WORKER
          PICKING_UP_GOD
          PLACING_WORKERS
          PLAYERS_SET_UP
          POWER_ACTIVATED
          SELECTING_WORKER
          SETTING_UP_PLAYERS
          STARTING_TURN
          WORKERS_PLACED
          WORKER_MOVED
          WORKER_SELECTED
        }
      }
    }
  }
  

  it.polimi.ingsw.client.controller.ClientBoardUpdater o-- it.polimi.ingsw.client.model.BabyGame : babyGame
  it.polimi.ingsw.client.controller.ClientBoardUpdater o-- it.polimi.ingsw.client.model.map.CLIclientMap : clientMap
  it.polimi.ingsw.client.controller.ClientManager o-- it.polimi.ingsw.network.message.server.ServerMessage : currentMessage
  it.polimi.ingsw.client.controller.ClientManager o-- it.polimi.ingsw.network.message.server.serverrequests.ServerRequest : currentServerRequest
  it.polimi.ingsw.client.controller.ClientManager o-- it.polimi.ingsw.client.model.BabyGame : babyGame
  it.polimi.ingsw.client.controller.ClientManager o-- it.polimi.ingsw.client.controller.ClientBoardUpdater : clientBoardUpdater
  it.polimi.ingsw.client.controller.ClientManager o-- it.polimi.ingsw.client.controller.PossibleClientState : clientState
  it.polimi.ingsw.client.controller.ClientManager o-- it.polimi.ingsw.server.model.player.Player : me
  it.polimi.ingsw.client.controller.ClientManager o-- it.polimi.ingsw.client.controller.OpponentTurnManager : opponentTurnManager
  it.polimi.ingsw.client.controller.MessageReceiver .up.|> java.lang.Runnable
  it.polimi.ingsw.client.controller.MessageReceiver o-- it.polimi.ingsw.network.Client : client
  it.polimi.ingsw.client.controller.MessageReceiver o-- it.polimi.ingsw.client.controller.ClientManager : clientManager


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
